LAYOUT(SettingsLayout, 708, 480)
	ITEM(Upp::DropList, direction, LeftPosZ(159, 135).TopPosZ(85, 20))
	ITEM(Upp::Option, wheel, SetLabel(t_("Wheel mode")).LeftPosZ(302, 140).TopPosZ(85, 20))
	ITEM(Upp::EditIntSpin, animation, Min(0).Max(1000).Tip(t_("Setting  a lower than 100 ms will effectively disable the animation.")).LeftPosZ(159, 135).TopPosZ(109, 20))
	ITEM(Upp::EditIntSpin, waitinterval, Min(0).Max(100).Tip(t_("\001[g Pty monitoring interval can be a value between 0`-100 ms.&Decreasing the interval may increase the performance but will also result in higher CPU usage.&The recommended value is 10 ms. ]")).LeftPosZ(159, 135).TopPosZ(156, 20))
	ITEM(Upp::Option, warnifelevated, SetLabel(t_("\aWarn if run with elevated privileges")).Tip(t_("Shows a warning message when Bobcat is started with admin/root rights")).HSizePosZ(8, 415).TopPosZ(284, 20))
	ITEM(Upp::Option, showmenu, SetLabel(t_("Show menu bar")).LeftPosZ(8, 285).TopPosZ(204, 20))
	ITEM(Upp::Option, showtitle, SetLabel(t_("Show title bar")).LeftPosZ(8, 285).TopPosZ(224, 20))
	ITEM(Upp::Option, frameless, SetLabel(t_("\aHide window caption and frames")).Tip(t_("Hides window caption and frames. (Suitable for tiling WMs)")).LeftPosZ(8, 285).TopPosZ(184, 20))
	ITEM(Upp::Option, custominput, SetLabel(t_("Use custom unicode input method")).Tip(t_("Enables the custom unicode input method for inserting unicode codepoints.")).LeftPosZ(8, 285).TopPosZ(264, 20))
	ITEM(Upp::Option, savescreenshot, SetLabel(t_("Save screenshot as a file")).Tip(t_("Saves screenshot as file instead of placing it in clipboard.")).LeftPosZ(8, 285).TopPosZ(244, 20))
	ITEM(Upp::DropList, finderpos, LeftPosZ(159, 135).TopPosZ(39, 20))
	ITEM(Upp::DropList, titlepos, LeftPosZ(159, 135).TopPosZ(17, 20))
	ITEM(Upp::DropList, notifierpos, LeftPosZ(159, 135).TopPosZ(62, 20))
	ITEM(Upp::Option, notifieranimation, SetLabel(t_("Animate")).LeftPosZ(302, 140).TopPosZ(62, 20))
	ITEM(Upp::DropList, splitterorientation, LeftPosZ(159, 135).TopPosZ(132, 20))
	ITEM(Upp::Option, wayland, SetLabel(t_("Use Wayland (experimental, needs restart)")).LeftPosZ(8, 285).TopPosZ(304, 20))
	ITEM(Upp::DropList, chstyle, RightPosZ(5, 171).TopPosZ(17, 20))
	ITEM(Upp::DataPusher, guifont, Tip(t_("Click to change font.")).RightPosZ(5, 171).TopPosZ(63, 20))
	ITEM(Upp::LineEdit, pagesizes, SetFont(Upp::Monospace()).Tip(t_("Page size format is  COLUMNSxROWS. Valid size range is between 2 to 300 cells.")).RightPosZ(5, 171).BottomPosZ(6, 111))
	ITEM(Upp::OptionBox, backgroundimage, SetLabel(t_("Background Image")).SetFont(Upp::StdFont().Bold()).HSizePosZ(3, 200).BottomPosZ(6, 94))
	ITEM(Upp::EditString, imagepath, Tip(t_("Click to change font.")).HSizePosZ(159, 214).BottomPosZ(65, 20))
	ITEM(Upp::DropList, imagemode, LeftPosZ(159, 135).BottomPosZ(42, 20))
	ITEM(Upp::SliderCtrl, imageblur, LeftPosZ(159, 135).BottomPosZ(19, 20))
	ITEM(Upp::Label, dv___23, SetLabel(t_("Splitter orientation")).LeftPosZ(8, 148).TopPosZ(132, 20))
	ITEM(Upp::Label, dv___24, SetLabel(t_("Notifications placement")).LeftPosZ(8, 148).TopPosZ(62, 20))
	ITEM(Upp::Label, dv___25, SetLabel(t_("Finder placement")).LeftPosZ(8, 148).TopPosZ(39, 20))
	ITEM(Upp::Label, dv___26, SetLabel(t_("Pty monitoring interval")).LeftPosZ(8, 148).TopPosZ(156, 20))
	ITEM(Upp::Label, dv___27, SetLabel(t_("Stack transition mode")).LeftPosZ(8, 148).TopPosZ(85, 20))
	ITEM(Upp::Label, dv___28, SetLabel(t_("ms")).LeftPosZ(302, 24).TopPosZ(156, 20))
	ITEM(Upp::Label, dv___29, SetLabel(t_("Stack animation duration")).LeftPosZ(8, 148).TopPosZ(109, 20))
	ITEM(Upp::Label, dv___30, SetLabel(t_("ms")).LeftPosZ(302, 24).TopPosZ(109, 20))
	ITEM(Upp::Label, dv___31, SetLabel(t_("Custom page sizes")).SetAlign(Upp::ALIGN_CENTER).RightPosZ(5, 171).BottomPosZ(121, 20))
	ITEM(Upp::Label, dv___32, SetLabel(t_("GUI theme")).RightPosZ(181, 70).TopPosZ(17, 19))
	ITEM(Upp::Label, dv___33, SetLabel(t_("Image path")).LeftPosZ(8, 148).BottomPosZ(65, 20))
	ITEM(Upp::Label, dv___34, SetLabel(t_("Display mode")).LeftPosZ(8, 148).BottomPosZ(42, 20))
	ITEM(Upp::Label, dv___35, SetLabel(t_("Blur")).LeftPosZ(8, 148).BottomPosZ(19, 20))
	ITEM(Upp::Label, dv___36, SetLabel(t_("(Needs restart)")).SetAlign(Upp::ALIGN_CENTER).RightPosZ(5, 171).TopPosZ(39, 20))
	ITEM(Upp::Label, dv___37, SetLabel(t_("(Needs restart)")).SetAlign(Upp::ALIGN_CENTER).RightPosZ(5, 171).TopPosZ(87, 20))
	ITEM(Upp::Label, dv___38, SetLabel(t_("GUI font")).RightPosZ(181, 70).TopPosZ(63, 19))
	ITEM(Upp::Label, dv___39, SetLabel(t_("Titlebar placement")).LeftPosZ(8, 148).TopPosZ(17, 20))
END_LAYOUT

LAYOUT(ProfilesLayout, 751, 492)
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Removing(true).AskRemove(false).Moving(true).Track(true).VertGrid(false).HorzGrid(false).SetLineCy(24).LeftPosZ(4, 134).VSizePosZ(4, 4))
END_LAYOUT

LAYOUT(GeneralProfileLayout, 577, 368)
	ITEM(Upp::EditString, cmd, HSizePosZ(112, 4).TopPosZ(4, 19))
	ITEM(Upp::EditString, dir, HSizePosZ(113, 3).TopPosZ(27, 19))
	ITEM(Upp::Option, shellintegration, SetLabel(t_("Shell integration")).LeftPosZ(112, 169).TopPosZ(53, 19))
	ITEM(Upp::EditField, answerback, MaxChars(30).RightPosZ(4, 148).TopPosZ(53, 19))
	ITEM(Upp::DocEdit, env, SetFont(Upp::Monospace()).HSizePosZ(112, 4).VSizePosZ(80, 80))
	ITEM(Upp::Option, noenv, SetLabel(t_("Don't inherit the environment")).LeftPosZ(112, 201).BottomPosZ(57, 19))
	ITEM(Upp::Option, addexetopath, SetLabel(t_("Add Bobcat's exe path to PATH")).LeftPosZ(112, 201).BottomPosZ(37, 19))
	ITEM(Upp::DropList, cmdexit, LeftPosZ(112, 201).BottomPosZ(14, 19))
	ITEM(Upp::Option, warnonrootaccess, SetLabel(t_("Warn on root access")).LeftPosZ(344, 228).BottomPosZ(14, 19))
	ITEM(Upp::DropList, pty, Tip(t_("Choose the pseudo-terminal backend. Note that winpty backend requires the PtyAgent.exe file in the exe directory.")).RightPosZ(4, 128).BottomPosZ(14, 19))
	ITEM(Upp::Label, ptylabel, SetLabel(t_("Pty backend")).LeftPosZ(344, 96).BottomPosZ(14, 19))
	ITEM(Upp::Label, dv___11, SetLabel(t_("Variables")).LeftPosZ(7, 96).TopPosZ(80, 19))
	ITEM(Upp::Label, dv___12, SetLabel(t_("Starting directory")).LeftPosZ(8, 96).TopPosZ(27, 19))
	ITEM(Upp::Label, dv___13, SetLabel(t_("Answerback message")).RightPosZ(154, 126).TopPosZ(53, 19))
	ITEM(Upp::Label, dv___14, SetLabel(t_("Command line")).LeftPosZ(7, 96).TopPosZ(4, 19))
	ITEM(Upp::Label, dv___15, SetLabel(t_("On exit")).LeftPosZ(7, 96).BottomPosZ(14, 19))
END_LAYOUT

LAYOUT(VisualProfileLayout, 591, 408)
	ITEM(Upp::DataPusher, font, Tip(t_("Click to change font.")).HSizePosZ(8, 224).TopPosZ(24, 20))
	ITEM(Upp::EditIntSpin, linespacing, Min(0).Max(128).NotNull(true).RightPosZ(42, 75).TopPosZ(24, 20))
	ITEM(Upp::Option, adjustcolors, SetLabel(t_("Adjust colors to dark themes")).HSizePosZ(8, 224).BottomPosZ(68, 16))
	ITEM(Upp::Option, lightcolors, SetLabel(t_("Force bright colors")).HSizePosZ(8, 224).BottomPosZ(52, 16))
	ITEM(Upp::Option, intensify, SetLabel(t_("Use bright colors with bold text")).HSizePosZ(8, 224).BottomPosZ(37, 16))
	ITEM(Upp::Option, dynamiccolors, SetLabel(t_("Dynamic colors")).HSizePosZ(8, 224).BottomPosZ(21, 16))
	ITEM(Upp::DropList, cursorstyle, RightPosZ(14, 134).TopPosZ(72, 20))
	ITEM(Upp::Option, blinkcursor, SetLabel(t_("Blinking")).RightPosZ(20, 184).TopPosZ(95, 16))
	ITEM(Upp::Option, lockcursor, SetLabel(t_("Locked")).RightPosZ(20, 184).TopPosZ(112, 16))
	ITEM(Upp::OptionBox, blinktext, SetLabel(t_("Blinking Text")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).TopPosZ(140, 52))
	ITEM(Upp::EditIntSpin, blinkinterval, Min(100).Max(60000).NotNull(true).Tip(t_("Text blinking interval can be an nteger value between 100 - 60000 ms.")).RightPosZ(42, 75).TopPosZ(160, 20))
	ITEM(Upp::Option, hidemouse, SetLabel(t_("Hide mouse cursor while typing")).RightPosZ(20, 184).TopPosZ(216, 16))
	ITEM(Upp::Option, bell, SetLabel(t_("Bell notifications")).RightPosZ(20, 184).TopPosZ(233, 16))
	ITEM(Upp::Option, sizehint, SetLabel(t_("Show size hint")).RightPosZ(20, 184).TopPosZ(250, 16))
	ITEM(Upp::Label, dv___14, SetLabel(t_("Blink interval")).RightPosZ(124, 80).TopPosZ(160, 20))
	ITEM(Upp::Label, dv___15, SetLabel(t_("Line spacing")).RightPosZ(124, 80).TopPosZ(24, 20))
	ITEM(Upp::Label, dv___16, SetLabel(t_("Style")).RightPosZ(148, 56).TopPosZ(72, 20))
	ITEM(Upp::LabelBox, dv___17, SetLabel(t_("Font")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 4).TopPosZ(4, 52))
	ITEM(Upp::LabelBox, dv___18, SetLabel(t_("Cursor")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).TopPosZ(56, 80))
	ITEM(Upp::LabelBox, dv___19, SetLabel(t_("Color Profiles")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 220).VSizePosZ(56, 8))
	ITEM(Palettes, colorprofiles, HSizePosZ(8, 225).VSizePosZ(71, 91))
	ITEM(Upp::LabelBox, dv___21, SetLabel(t_("Misc.")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).VSizePosZ(196, 8))
	ITEM(Upp::Option, noscroll, SetLabel(t_("Don't scroll the page on new output")).RightPosZ(10, 194).TopPosZ(267, 16))
	ITEM(Upp::Label, dv___23, SetLabel(t_("ms")).RightPosZ(14, 20).TopPosZ(160, 19))
	ITEM(Upp::Label, dv___24, SetLabel(t_("px")).RightPosZ(14, 20).TopPosZ(23, 19))
END_LAYOUT

LAYOUT(EmulationProfileLayout, 620, 500)
	ITEM(Upp::DropList, charset, HSizePosZ(8, 233).TopPosZ(27, 20))
	ITEM(Upp::Option, widechars, SetLabel(t_("Treat ambiguous width characters as wide characters")).LeftPosZ(8, 340).TopPosZ(52, 16))
	ITEM(Upp::DropList, erasechar, HSizePosZ(211, 301).TopPosZ(90, 20))
	ITEM(Upp::DropList, keystyle, HSizePosZ(211, 301).TopPosZ(113, 20))
	ITEM(Upp::Option, keynavigation, SetLabel(t_("Allow key navigation")).LeftPosZ(8, 340).TopPosZ(171, 16))
	ITEM(Upp::Option, altescapes, SetLabel(t_("ALT modifier escapes keys")).HSizePosZ(8, 274).TopPosZ(139, 16))
	ITEM(Upp::Option, altshifts, SetLabel(t_("ALT modifier shifts keys")).LeftPosZ(8, 340).TopPosZ(155, 16))
	ITEM(Upp::EditIntSpin, wheelstep, Min(1).Max(256).HSizePosZ(211, 301).TopPosZ(239, 20))
	ITEM(Upp::DropList, overridetracking, HSizePosZ(211, 301).TopPosZ(214, 20))
	ITEM(Upp::Option, alternatescroll, SetLabel(t_("Alternate scroll")).LeftPosZ(8, 340).TopPosZ(270, 16))
	ITEM(Upp::Option, images, SetLabel(t_("Inline Images")).RightPosZ(38, 174).TopPosZ(194, 16))
	ITEM(Upp::Option, hyperlinks, SetLabel(t_("Hyperlinks")).RightPosZ(38, 174).TopPosZ(210, 16))
	ITEM(Upp::Option, delayedrefresh, SetLabel(t_("Delayed display refresh")).RightPosZ(38, 174).TopPosZ(260, 16))
	ITEM(Upp::Option, lazyresize, SetLabel(t_("Lazy window resize")).RightPosZ(38, 174).TopPosZ(276, 16))
	ITEM(Upp::Option, rewrap, SetLabel(t_("Reverse wrap")).RightPosZ(38, 174).TopPosZ(292, 16))
	ITEM(Upp::Option, progress, SetLabel(t_("Progress notification")).Tip(t_("Enables progress notification protocol.")).RightPosZ(38, 174).TopPosZ(244, 16))
	ITEM(Upp::Option, annotations, SetLabel(t_("Annotations")).RightPosZ(38, 174).TopPosZ(226, 16))
	ITEM(Upp::OptionBox, history, SetLabel(t_("History Buffer")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).TopPosZ(4, 57))
	ITEM(Upp::EditIntSpin, historysize, Min(1).Max(65536).RightPosZ(15, 104).TopPosZ(27, 20))
	ITEM(Upp::Option, windowreports, SetLabel(t_("Window  reports")).RightPosZ(17, 195).TopPosZ(82, 16))
	ITEM(Upp::Option, windowactions, SetLabel(t_("Window  actions")).RightPosZ(17, 195).TopPosZ(98, 16))
	ITEM(Upp::Option, readclipboard, SetLabel(t_("Allow read access")).RightPosZ(18, 194).TopPosZ(139, 16))
	ITEM(Upp::Option, writeclipboard, SetLabel(t_("Allow write access")).RightPosZ(18, 194).TopPosZ(155, 16))
	ITEM(Upp::Label, dv___23, SetLabel(t_("Max. lines")).RightPosZ(121, 91).TopPosZ(27, 20))
	ITEM(Upp::LabelBox, dv___24, SetLabel(t_("Other")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).VSizePosZ(177, 140))
	ITEM(Upp::LabelBox, dv___25, SetLabel(t_("Window Operations")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).TopPosZ(65, 53))
	ITEM(Upp::LabelBox, dv___26, SetLabel(t_("Application Clipboard Access")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).TopPosZ(124, 53))
	ITEM(Upp::Label, dv___27, SetLabel(t_("Function key behavior")).LeftPosZ(8, 172).TopPosZ(115, 16))
	ITEM(Upp::Label, dv___28, SetLabel(t_("Backspace key sends")).LeftPosZ(8, 172).TopPosZ(92, 16))
	ITEM(Upp::Label, dv___29, SetLabel(t_("Mouse wheel step")).LeftPosZ(8, 172).TopPosZ(241, 16))
	ITEM(Upp::Label, dv___30, SetLabel(t_("Override mouse tracking mode")).LeftPosZ(8, 172).TopPosZ(216, 16))
	ITEM(Upp::LabelBox, dv___31, SetLabel(t_("Mouse")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).VSizePosZ(199, 140))
	ITEM(Upp::LabelBox, dv___32, SetLabel(t_("Keyboard")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).TopPosZ(78, 118))
	ITEM(Upp::LabelBox, dv___33, SetLabel(t_("Encoding")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).TopPosZ(4, 72))
	ITEM(Upp::Label, dv___34, SetLabel(t_("lines")).RightPosZ(244, 52).TopPosZ(239, 19))
	ITEM(Upp::Label, dv___35, SetLabel(t_("key")).RightPosZ(244, 52).TopPosZ(214, 19))
	ITEM(Upp::TabCtrl, tabs, HSizePosZ(4, 8).BottomPosZ(5, 131))
END_LAYOUT

LAYOUT(LinkifierProfileLayout, 400, 200)
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Inserting(true).Appending(true).Removing(true).Moving(true).Track(true).VertGrid(false).HorzGrid(false).MultiSelect(true).SetLineCy(24).HSizePosZ(1, 2).VSizePosZ(2, 3))
END_LAYOUT

LAYOUT(FontSelectorLayout, 352, 348)
	ITEM(Upp::EditString, search, HSizePosZ(3, 3).TopPosZ(4, 19))
	ITEM(Upp::ColumnList, font, HSizePosZ(3, 3).VSizePosZ(28, 142))
	ITEM(Upp::SliderCtrl, slider, HSizePosZ(64, 86).BottomPosZ(119, 20))
	ITEM(Upp::EditIntSpin, fontsize, Min(6).Max(128).RightPosZ(3, 64).BottomPosZ(119, 20))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(5, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(64, 56).BottomPosZ(4, 24))
	ITEM(Upp::StaticText, preview, SetText(t_("The quick brown fox jumps over the lazy dog.")).SetAlign(Upp::ALIGN_CENTER).HSizePosZ(13, 14).BottomPosZ(46, 54))
	ITEM(Upp::Label, dv___7, SetLabel(t_("Size")).LeftPosZ(8, 48).BottomPosZ(119, 20))
	ITEM(Upp::LabelBox, dv___8, SetLabel(t_("Preview")).SetFont(Upp::StdFont().Bold()).HSizePosZ(3, 3).BottomPosZ(36, 80))
END_LAYOUT

LAYOUT(PaletteListLayout, 400, 200)
	ITEM(Upp::ArrayCtrl, list, Header(false).AskRemove(false).VertGrid(false).HorzGrid(false).HSizePosZ(2, -1).VSizePosZ(1, 4))
END_LAYOUT

LAYOUT(ColorPaletteLayout, 336, 276)
	ITEM(Upp::ArrayCtrl, colors, AutoHideSb(true).AskRemove(false).VertGrid(false).HorzGrid(false).SetLineCy(24).HSizePosZ(1, 1).VSizePosZ(0, 33))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(5, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(64, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, reset, SetLabel(t_("Restore defaults")).LeftPosZ(4, 160).BottomPosZ(4, 24))
END_LAYOUT

LAYOUT(AboutLayout, 447, 256)
	ITEM(Upp::RichTextCtrl, txt, HSizePosZ(0, 1).VSizePosZ(1, 1))
END_LAYOUT

LAYOUT(NavigatorLayout, 526, 24)
	ITEM(ToolButton, newterm, LeftPosZ(4, 16).VSizePosZ(4, 4))
	ITEM(ToolButton, profiles, LeftPosZ(18, 16).VSizePosZ(4, 4))
	ITEM(Upp::EditString, search, HSizePosZ(128, 128).VSizePosZ(2, 2))
	ITEM(ToolButton, close, RightPosZ(4, 16).VSizePosZ(4, 4))
END_LAYOUT

LAYOUT(FinderLayout, 526, 24)
	ITEM(ToolButton, prev, RightPosZ(262, 16).VSizePosZ(4, 4))
	ITEM(ToolButton, next, RightPosZ(242, 16).VSizePosZ(4, 4))
	ITEM(ToolButton, begin, RightPosZ(222, 16).VSizePosZ(4, 4))
	ITEM(ToolButton, end, RightPosZ(202, 16).VSizePosZ(4, 4))
	ITEM(Upp::Option, showall, SetLabel(t_("Show all")).RightPosZ(122, 72).VSizePosZ(4, 4))
	ITEM(Upp::Option, parallelize, SetLabel(t_("Parallelize")).Tip(t_("Enables or disables parallel (multithreaded) search.")).RightPosZ(50, 68).VSizePosZ(4, 4))
	ITEM(ToolButton, close, RightPosZ(4, 16).VSizePosZ(4, 4))
END_LAYOUT

LAYOUT(FinderProfileLayout, 659, 299)
	ITEM(Upp::DropList, searchmode, LeftPosZ(209, 178).TopPosZ(6, 20))
	ITEM(Upp::Option, showall, SetLabel(t_("Show all ")).LeftPosZ(396, 110).TopPosZ(8, 16))
	ITEM(Upp::EditIntSpin, maxsearch, Min(1).Max(256000).NotNull(true).LeftPosZ(209, 178).TopPosZ(31, 20))
	ITEM(Upp::DropList, saveformat, HSizePosZ(209, 272).TopPosZ(78, 20))
	ITEM(Upp::DropList, savemode, HSizePosZ(209, 272).TopPosZ(103, 20))
	ITEM(Upp::Label, dv___5, SetLabel(t_("Default search mode")).LeftPosZ(12, 191).TopPosZ(8, 16))
	ITEM(Upp::Label, dv___6, SetLabel(t_("Search limit")).LeftPosZ(12, 191).TopPosZ(33, 16))
	ITEM(Upp::Label, dv___7, SetLabel(t_("Harvesting mode")).HSizePosZ(12, 456).TopPosZ(105, 16))
	ITEM(Upp::Label, dv___8, SetLabel(t_("Delimiter")).HSizePosZ(12, 456).TopPosZ(130, 16))
	ITEM(Upp::Label, dv___9, SetLabel(t_("Harvesting format")).HSizePosZ(12, 456).TopPosZ(80, 16))
	ITEM(Upp::Label, dv___10, SetLabel(t_("items (per thread)")).LeftPosZ(396, 110).TopPosZ(31, 19))
	ITEM(Upp::EditString, delimiter, MaxLen(4).TrimLeft(true).TrimRight(true).NotNull(true).MaxChars(4).LeftPosZ(210, 64).TopPosZ(128, 20))
	ITEM(Upp::Option, parallelize, SetLabel(t_("Parallel search")).Tip(t_("Enables or disables parallel (multithreaded) search.")).LeftPosZ(209, 176).TopPosZ(56, 16))
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Inserting(true).Appending(true).Removing(true).Moving(true).Track(true).VertGrid(false).HorzGrid(false).MultiSelect(true).SetLineCy(24).HSizePosZ(1, 2).VSizePosZ(156, 3))
END_LAYOUT

LAYOUT(AnnotationEditorLayout, 310, 183)
	ITEM(Upp::DocEdit, text, SetFont(Upp::Monospace()).HSizePosZ(1, 2).VSizePosZ(2, 33))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(5, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(64, 56).BottomPosZ(4, 24))
END_LAYOUT

LAYOUT(SelectionLayout, 616, 120)
	ITEM(Upp::DropList, wordselmode, HSizePosZ(207, 212).TopPosZ(6, 20))
	ITEM(Upp::EditString, wordselchars, HSizePosZ(207, 212).TopPosZ(31, 20))
	ITEM(Upp::EditString, wordselpattern, HSizePosZ(206, 18).TopPosZ(55, 20))
	ITEM(Upp::Label, dv___3, SetLabel(t_("Word selection extra chars")).LeftPosZ(4, 198).TopPosZ(33, 16))
	ITEM(Upp::Label, dv___4, SetLabel(t_("Word selection mode")).LeftPosZ(4, 198).TopPosZ(8, 16))
	ITEM(Upp::Label, dv___5, SetLabel(t_("Word selection pattern")).LeftPosZ(4, 198).TopPosZ(57, 16))
	ITEM(Upp::Option, findselectedtext, SetLabel(t_("Copy selected text to finder")).HSizePosZ(4, 20).BottomPosZ(4, 16))
END_LAYOUT

LAYOUT(PasteLayout, 564, 120)
	ITEM(Upp::Option, filter, SetLabel(t_("Filter out control bytes")).HSizePosZ(4, 12).BottomPosZ(4, 16))
	ITEM(Upp::DropList, pathtranslation, HSizePosZ(207, 212).TopPosZ(6, 20))
	ITEM(Upp::EditString, pathdelimiter, MaxLen(8).HSizePosZ(207, 212).TopPosZ(31, 20))
	ITEM(Upp::Label, dv___3, SetLabel(t_("Path delimiter")).LeftPosZ(4, 198).TopPosZ(33, 16))
	ITEM(Upp::Label, dv___4, SetLabel(t_("Path translation")).LeftPosZ(4, 198).TopPosZ(8, 16))
END_LAYOUT

LAYOUT(QuickTextListLayout, 400, 200)
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Header(false).AskRemove(false).VertGrid(false).HorzGrid(false).SetLineCy(24).HSizePosZ(2, -1).VSizePosZ(1, 4))
END_LAYOUT

LAYOUT(QuickTextLayout, 388, 208)
	ITEM(Upp::DropList, type, HSizePosZ(80, 4).TopPosZ(4, 19))
	ITEM(Upp::EditString, alias, HSizePosZ(80, 4).TopPosZ(28, 19))
	ITEM(Upp::DocEdit, text, HSizePosZ(80, 4).VSizePosZ(52, 32))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(64, 56).BottomPosZ(5, 23))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(4, 56).BottomPosZ(5, 23))
	ITEM(Upp::Label, dv___5, SetLabel(t_("String")).LeftPosZ(4, 68).TopPosZ(52, 19))
	ITEM(Upp::Label, dv___6, SetLabel(t_("Alias")).LeftPosZ(4, 68).TopPosZ(28, 19))
	ITEM(Upp::Label, dv___7, SetLabel(t_("Type")).LeftPosZ(4, 68).TopPosZ(4, 19))
END_LAYOUT

LAYOUT(WebSearchLayout, 528, 104)
	ITEM(Upp::EditString, alias, HSizePosZ(80, 4).TopPosZ(4, 19))
	ITEM(Upp::EditString, uri, NotNull(true).HSizePosZ(80, 4).TopPosZ(28, 19))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(64, 56).BottomPosZ(5, 23))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(4, 56).BottomPosZ(5, 23))
	ITEM(Upp::Label, dv___4, SetLabel(t_("URI")).LeftPosZ(4, 68).TopPosZ(28, 19))
	ITEM(Upp::Label, dv___5, SetLabel(t_("Name")).LeftPosZ(4, 68).TopPosZ(4, 19))
	ITEM(Upp::StaticText, dv___6, SetText(t_("\001[g Use [* %s] as a placeholder for the search phrase")).LeftPosZ(80, 444).TopPosZ(52, 19))
END_LAYOUT

LAYOUT(WebSearchListLayout, 400, 200)
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Header(false).AskRemove(false).VertGrid(false).HorzGrid(false).SetLineCy(24).HSizePosZ(2, -1).VSizePosZ(1, 4))
END_LAYOUT

